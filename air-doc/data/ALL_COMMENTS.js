var ALL_COMMENTS = [{desc:"删除数组里的重复元素。",author:"hahaboy",ver:"0.0.1",p:[{name:"arr",type:"array",desc:"数组"},{name:"prop",type:"string",desc:"可选。如果是一个对象数组，那么根据每个对象的prop这个字段排重。",opt:1}],eg:"var unique = require('air/array/unique');\nunique([1, 3, 2, 1, 5, 1, '2', '1', null, 'null', null, '']); //返回[1, 3, 2, 5, '2', '1', null, 'null', '']\nunique([{a:1, b:3}, {a:2, b:1}, {a:5, b:1}], 'b'); //返回[{a:1, b:3}, {a:2, b:1}]",f:"array/unique.js",id:"unique"},{desc:"计算字符串长度，将unicode字符计算为2个单位",p:[{name:"str",type:"string",desc:"源字符串"}],eg:"var byteLength = require('air/string/byteLength');\nbyteLength('中国'); //4\nbyteLength('中国2'); //5",f:"string/byteLength.js",id:"byteLength"},{desc:"文本处理工具",eg:"var Text = require('air/string/Text');",f:"string/Text.js",nf:1,id:"Text"},{desc:"将字符串进行html编码",p:[{name:"str",type:"string",desc:"需要html编码的字符串"}],r:"对str进行html编码后的字符串",eg:"var txt = '<script data-ng=\"1\">alert(1);</script>';\nvar Text = require('air/string/Text');\nalert(Text.encodeHTML(txt)); //&lt;script&nbsp;data-ng=\"1\"&gt;alert(1);&lt;/script&gt;",f:"string/Text.js",id:"Text.encodeHTML"},{desc:"将html编码的字符串解码",p:[{name:"str",type:"string",desc:"需要解码的html字符串"}],r:"解码后的字符串",eg:"var txt = \"&lt;script&gt;alert(1);&lt;/script&gt;\";\nalert(Text.decodeHTML(txt)); //<script>alert(1);</script>",f:"string/Text.js",id:"Text.decodeHTML"},{desc:"将数字加上千位分隔符",p:[{name:"num",type:"number",desc:"源数字"}],r:"string 加上千位分隔符的数字字符串",eg:"var thousand = require('air/string/thousand');\nthousand(289887); //返回289,887\nthousand(89887.90); //返回89,887.90",f:"string/thousand.js",id:"thousand"},{desc:"截取指定长度的字符串",author:"hahaboy",p:[{name:"str",type:"string",desc:"源字符串"},{name:"clipLen",type:"number",desc:"截取长度"},{name:"limitLen",type:"number",desc:"最大长度，默认是截取长度。超过这个最大长度才截字符串。",opt:1},{name:"suffix",type:"string",desc:"后缀，默认两个点",opt:1,val:"'..'"}],note:["一个全角字符长度算2"],eg:"var clip = require('air/util/clip');\ntrace(clip('我是中国人', 8)); //我是中国..\ntrace(clip('我是中国人', 8, '…')); //我是中国…\ntrace(clip('我是中国人', 8, 10)); //我是中国人\ntrace(clip('我是中国人哈哈哈', 8, 10)); //我是中国..",f:"util/clip.js",id:"clip"},{desc:"cookie操作对象。",f:"util/Cookie.js",nf:1,id:"Cookie"},{desc:"设置Cookie",p:[{name:"name",type:"string",desc:"cookie名"},{name:"value",type:"string|number",desc:"cookie值"},{name:"opt",type:"object",desc:"opt里应该提供：<p><b>domain</b>: cookie种到什么域，默认值letv.com</p><p><b>path</b>: cookie种到什么路径，默认值/</p><p><b>exp</b>: cookie过期时间，以小时为单位，默认是会话cookie。如果是一个数字，表示多少小时后cookie失效；如果是一个时间对象，表示在那个时间后失效；如果要存一个长期有效的cookie，该值写为'forever'，50年后过期。</p>",opt:1}],note:["删除cookie：Cookie.set(name, null);"],eg:"//最简单的种cookie\nCookie.set('ts_env11', 'x-x_x,x.x=x%x;x$x\\\\x'); //只有-_.这3个字符不会被转义\nCookie.set('ts_env12', 2);\n//5小时后过期的cookie\nCookie.set('ts112', 'ffd892', {exp:5});\n//永远有效的cookie\nCookie.set('ts2', 'some value', {exp:'forever'});\ntrace(Cookie.get('ts_env11'));\ntrace(Cookie.get('ts_env12'));\n//删除cookie\nCookie.set('ts_env12', null);\ntrace(Cookie.get('ts11'));",f:"util/Cookie.js",id:"Cookie.set"},{desc:"读取Cookie",p:[{name:"name",type:"string",desc:"cookie名"}],r:"string cookie值",f:"util/Cookie.js",id:"Cookie.get"},{desc:"把时间长度转换成指定格式的时间。",p:[{name:"time",type:"number",desc:"时间长度，单位秒"},{name:"timeFormat",type:"string",desc:"时间格式，如 HH:MM:SS"}],r:"string 指定格式的时间",eg:"formatDuration(3615, '<p>HH小时MM分钟SS秒</p>'); //<p>01小时00分钟15秒</p>\nformatDuration(3615, '<p>H小时M分钟S秒</p>'); //<p>1小时0分钟15秒</p>",f:"util/formatDuration.js",id:"formatDuration"},{desc:"异步顺序执行控制。",eg:"var Promise = require('air/util/Promise');\nvar promise = new Promise();\n\nfunction f1() {\n\tsetTimeout(function () {\n\t\talert(1);\n\t\tpromise.resolve();\n\t}, 1500);\n}\n\nfunction f2() {\n\tsetTimeout(function () {\n\t\talert(2);\n\t\tpromise.resolve();\n\t}, 1500);\n}\n\nfunction f3() {\n\tsetTimeout(function () {\n\t\talert(3);\n\t\tpromise.resolve();\n\t}, 1500);\n}\n\nfunction f4() {\n\talert(4);\n}\n\n//用法1：\npromise.then(f1).then(f2).then(f3).then(f4).resolve();\n//用法2：\npromise.then(f1, f3, f2, f4).resolve();\n//用法3：\npromise.then(f1, f3).then(f2).then(f4);\npromise.resolve();",f:"util/Promise.js",id:"Promise",t:" class "},{desc:"url相关工具",author:"hahaboy",eg:"var Url = require('air/util/Url');",f:"util/Url.js",nf:1,id:"Url"},{desc:"获取URL中的参数",p:[{name:"name",type:"string",desc:"参数名"}],r:"参数值",note:["所有返回值都是字符串"],eg:"//URL: http://open.api.letv.com/ms?from=pc&or=1&dt=2\nUrl.getQuery('dt'); //返回'2'\nUrl.getQuery(); //返回对象：{from:'pc', or:'1', dt:'2'}",f:"util/Url.js",id:"Url.getQuery"},{desc:"把一个对象序列化成URL参数字符串",p:[{name:"query",type:"object",desc:"参数对象"}],note:["空字符串不能传","参数值会被进行encodeURIComponent编码"],eg:"//返回 a=1&c=false&d=0\nUrl.serializeQuery({a:1, b:'', c:false, d:0});",f:"util/Url.js",id:"Url.serializeQuery"},{desc:"解析URL参数格式的字符串",p:[{name:"url",type:"string",desc:"可以是url但不一定是url"}],f:"util/Url.js",id:"Url.parseQuery"},{desc:"把一个URL拼接上一个参数对象",p:[{name:"url",type:"string",desc:"url地址"},{name:"query",type:"object",desc:"参数对象"}],eg:"//返回 http://xyz.com/?a=1&e=0\nUrl.serializeQuery('http://xyz.com/', {a:1, b:'', e:0});",f:"util/Url.js",id:"Url.setQuery"}];
